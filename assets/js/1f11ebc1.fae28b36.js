"use strict";(self.webpackChunksir_hurt_api_docs=self.webpackChunksir_hurt_api_docs||[]).push([[89],{6743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Functions/GetAutoInject","title":"GetAutoInject","description":"GetAutoInject","source":"@site/docs/Functions/GetAutoInject.md","sourceDirName":"Functions","slug":"/Functions/GetAutoInject","permalink":"/SirHurtAPIDocs/docs/Functions/GetAutoInject","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"LaunchExploit","permalink":"/SirHurtAPIDocs/docs/Functions/LaunchExploit"},"next":{"title":"GetAutoExecute","permalink":"/SirHurtAPIDocs/docs/Functions/GetAutoExecute"}}');var i=n(4848),o=n(8453);const r={sidebar_position:3},c=void 0,u={},a=[{value:"GetAutoInject",id:"getautoinject",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3},{value:"Remarks",id:"remarks",level:3},{value:"Exceptions",id:"exceptions",level:3}];function l(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"getautoinject",children:"GetAutoInject"}),"\n",(0,i.jsx)(t.p,{children:"This function retrieves the auto-inject status from the Windows registry."}),"\n",(0,i.jsx)(t.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:"public static bool GetAutoInject()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"bool"}),": The auto-inject status."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:'bool autoInjectStatus = SirHurtAPI.SirHurtAPI.GetAutoInject();\nConsole.WriteLine("Auto Inject Status: " + autoInjectStatus);\n'})}),"\n",(0,i.jsx)(t.h3,{id:"remarks",children:"Remarks"}),"\n",(0,i.jsxs)(t.p,{children:["This function attempts to read the ",(0,i.jsx)(t.code,{children:"AutoIJ"})," value from the ",(0,i.jsx)(t.code,{children:"SirHurtAPI"})," registry key under ",(0,i.jsx)(t.code,{children:"HKEY_CURRENT_USER"}),". If the value cannot be read, it defaults to ",(0,i.jsx)(t.code,{children:"false"})," and logs the error."]}),"\n",(0,i.jsx)(t.h3,{id:"exceptions",children:"Exceptions"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Exception"}),": If there is an issue accessing the registry or converting the value, the exception is caught, logged, and the auto-inject status is set to ",(0,i.jsx)(t.code,{children:"false"}),"."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);